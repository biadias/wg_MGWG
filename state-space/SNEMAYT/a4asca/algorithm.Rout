
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #####################################################################
> # 20190922 EJ
> #
> # Running stock assessments for WGMG 2018 projects
> #####################################################################
> 
> library(FLa4a)
Loading required package: FLCore
Loading required package: lattice
Loading required package: iterators
FLCore (Version 2.6.13.9007, packaged: Fri Sep 27 18:02:27 2019)
Loading required package: triangle
Loading required package: copula
Loading required package: coda
This is FLa4a 1.6.8. For overview type 'help(package="FLa4a")'

> source('../../helper_code/a4a_funs.R')
> 
> #====================================================================
> # read data
> #====================================================================
> setwd('../')
> idxs <- readFLIndices('SNEMAYT_survey.dat')
> stk <- readFLStock('index.low', no.discards = TRUE)
> stk <- setPlusGroup(stk, 6)
[1] "maxfbar has been changed to accomodate new plusgroup"
> range(stk)[c('minfbar','maxfbar')] <- c(4,5)
> setwd('a4asca')
> 
> #====================================================================
> # replace 0 with half of the minimum
> #====================================================================
> catch.n(stk)[catch.n(stk)==0] <- min(catch.n(stk)[catch.n(stk)!=0])/2
Warning message:
In .local(x, i, ...) : Selected elements do not form a coherent 6D array
> idxs <- lapply(idxs, function(x){
+ 	index(x)[index(x)==0] <- min(index(x)[index(x)!=0])/2
+ 	x
+ })
Warning messages:
1: In .local(x, i, ...) :
  Selected elements do not form a coherent 6D array
2: In .local(x, i, ...) :
  Selected elements do not form a coherent 6D array
> 
> #====================================================================
> # Use only years with surveys
> #====================================================================
> my <- min(unlist(lapply(lapply(idxs, range), '[', 'minyear')))
> stk <- window(stk, start=my)
> 
> #====================================================================
> # run model
> #====================================================================
> qmod <- list(~s(age, k=3, by=breakpts(year, 2008)), ~s(age, k=3, by=breakpts(year, 2008)))
> fmod <- ~s(year, k=4, by=breakpts(age,c(0:6))) + te(age, year, k=c(5,10))
> srmod <- ~geomean(a=~breakpts(year, 1990), CV=0.4)
> fit <- sca(stk, idxs, fmodel=fmod, qmodel=qmod, srmodel=srmod)
Warning message:
*** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
> fits <- simulate(fit, 500)
Warning message:
*** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
> 
> #====================================================================
> # run retro and predictions
> #====================================================================
> stk.retro <- retro_snemayt(stk, idxs, retro=7, k=c(age=5, year=10), frat=.22, qmodel=qmod, srmodel=srmod)
Warning messages:
1: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
2: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
3: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
4: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
5: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
6: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     9)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).17
	te(age,year).26
	te(age,year).35
	te(age,year).43
	te(age,year).44 
7: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     9)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).17
	te(age,year).26
	te(age,year).35
	te(age,year).43
	te(age,year).44 
8: *** ~s(year, k = 5, by = breakpts(age, 0:6)) + te(age, year, k = c(5,     9)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).17
	te(age,year).26
	te(age,year).35
	te(age,year).43
	te(age,year).44 
> fit.rm <- mohn(stk.retro)
> fit.pi <- predIdxs(stk, idxs, qmodel=qmod, fmodel=fmod, srmodel=srmod)
Warning messages:
1: *** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
2: *** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
3: *** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
> 
> #====================================================================
> # save
> #====================================================================
> dumpTabs(stk, idxs, fits, preds=fit.pi, mohnRho=fit.rm)
> dumpDiags(stk, idxs, fit, stk.retro, fit.pi)
Loading required package: ggplotFL
Loading required package: ggplot2

Attaching package: ‘ggplot2’

The following object is masked from ‘package:FLCore’:

    %+%

null device 
          1 
Warning messages:
1: replacing previous import ‘ggplot2::%+%’ by ‘FLCore::%+%’ when loading ‘ggplotFL’ 
2: *** ~s(year, k = 4, by = breakpts(age, c(0:6))) + te(age, year, k = c(5,     10)) has 5 too many parameter(s)!!
    i will remove the redundant ones:
	te(age,year).19
	te(age,year).29
	te(age,year).39
	te(age,year).48
	te(age,year).49 
> 
> 
> proc.time()
   user  system elapsed 
 41.575   0.843  42.426 
